{"version":3,"sources":["components/ItemsList/PlacesList/PlaceItem.module.css","components/ChangeInventory/DeleteInventory/DeleteInventory.module.css","components/common/FormControls/FormsControls.module.css","components/ItemsList/PlacesList/PlaceList.module.css","logo.svg","api/api.js","redux/reducer.js","components/ItemsList/InventoryList/InventoryList.jsx","components/ItemsList/PlacesList/PlacesList.jsx","components/ItemsList/PlacesList/PlacesItem.jsx","validators/validators.js","components/ChangeInventory/EditInventory/EditInventoryItem.jsx","components/common/FormControls/FormControls.js","components/ChangeInventory/EditInventory/EditInventoryForm.jsx","components/ChangeInventory/EditInventory/EditInventory.jsx","components/ChangeInventory/ChangeInventoryItem.jsx","components/ChangeInventory/DeleteInventory/DeleteInventory.jsx","components/ChangeInventory/AddInvenory/AddInventoryForm.jsx","components/ChangeInventory/AddInvenory/AddInventory.jsx","components/ItemsList/ListContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/ChangeInventory/AddInvenory/AddInventory.module.css","components/ItemsList/InventoryList/InventoryList.module.css","components/ChangeInventory/EditInventory/EditInventory.module.css"],"names":["module","exports","updateInventory","inventoryIteId","count","firebase","firestore","collection","doc","update","then","console","info","deleteInventory","inventoryId","delete","addInventory","name","placeId","set","place","SET_DATA","SET_PLACES_HIERARCHY","SET_VIEWING_PLACE","initialState","places","inventory","placesData","viewingPlaceId","undefined","viewingPlaceName","inventoryPlaces","setData","type","reducer","state","action","copyState","placeName","InventoryList","props","inventoryItems","getChoosingInventoryItem","map","el","className","styles","inventoryInfoCol","inventoryName","data","inventoryCount","Col","inventoryCol","xs","inventoryPlace","length","PlaceList","navCol","Row","buildingsRow","getBuildingsHtml","buttonsRow","buttonsCol","inventoryButton","to","nav_item","activeClassName","nav_item_active","Button","nav_item_button","size","variant","color","startIcon","PlacesItem","useState","isClicked","setIsClicked","placeOnClick","e","getInventoryList","setViewingPlace","id","main","onClick","event","childPlaces","clickedPlace","requiredField","value","maxLengthCreator","maxLength","isNumber","isNaN","Number","EditInventoryItem","FormControlLabel","control","Radio","label","checked","isChecked","Textarea","input","meta","formControl","error","TextField","touched","maxlength5","EditInventoryForm","reduxForm","form","onChange","setNewPlaceId","target","newPlaceId","onSubmit","handleSubmit","Field","component","RadioGroup","placeholder","validate","updateButton","EditInventory","getUpdateInventoryList","inventoryItem","forEach","push","editInventory","a","editInventoryCount","rerenderComponent","editInventoryCol","title","chooseTitle","ChangeInventoryItem","DeleteInventory","getInventory","deleteInventoryCol","maxlength20","AddInventoryForm","i","textField","AddInventory","placesArr","getAddInventoryList","InventoryName","InventoryCount","addNewInventory","addInventoryCol","log","addInventoryName","addInventoryCount","ListContainer","componentDidMount","getDataThunkCreator","setInventoryOnPlaces","setPlacesHierarchy","getBuildingsData","setState","ms","filter","parts","placeItem","getPlacesHierarchy","rooms","includes","element","index","findIndex","k","newData","concat","getPlacesHtml","PlacesHtml","array","getPlaceInventory","item","desiredItemId","find","unitedPlaces","render","placesRow","Route","path","editInventoryThunkCreator","deleteInventoryThunkCreator","addInventoryThunkCreator","React","Component","compose","connect","page","dispatch","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","get","response","docs","x","part","App","Container","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getState","bind","document","getElementById"],"mappings":"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","file":"static/js/main.ed308e95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PlaceItem_main__XT3Sy\",\"clickedPlace\":\"PlaceItem_clickedPlace__3COey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"DeleteInventory_title__3Wt9j\",\"deleteInventoryCol\":\"DeleteInventory_deleteInventoryCol__2opaV\",\"chooseTitle\":\"DeleteInventory_chooseTitle__3dycG\",\"textField\":\"DeleteInventory_textField__3vfEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3pvy1\",\"error\":\"FormsControls_error__3T1Jj\",\"formInputControl\":\"FormsControls_formInputControl__20e_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placesRow\":\"PlaceList_placesRow__3GG03\",\"navCol\":\"PlaceList_navCol__2omYk\",\"nav_item_button\":\"PlaceList_nav_item_button__1-hEo\",\"buildingsRow\":\"PlaceList_buildingsRow__1Fq8C\",\"buttonsRow\":\"PlaceList_buttonsRow__3Hlin\",\"buttonsCol\":\"PlaceList_buttonsCol__2p0OP\",\"inventoryButton\":\"PlaceList_inventoryButton__16cx3\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase\";\r\n\r\nexport const initializeApp = () => {\r\n    let firebaseConfig = {\r\n        apiKey: \"AIzaSyD6DnGbVfdJlDJ_pEOUfDfTDJrA8j3lIs8\",\r\n        authDomain: \"dv-inventory.firebaseapp.com\",\r\n        databaseURL: \"https://dv-inventory.firebaseio.com\",\r\n        projectId: \"dv-inventory\",\r\n        storageBucket: \"dv-inventory.appspot.com\",\r\n        messagingSenderId: \"130062240176\",\r\n        appId: \"1:130062240176:web:ecbca5d29b37d25c6cee75\"\r\n    };\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\n\r\nexport const getPlaces = () => {\r\n    return firebase.firestore().collection(\"places\").get().then(response => {\r\n        let docs = response.docs.map(x => ({\r\n            id: x.id,\r\n            data: x.data(),\r\n            parts: x.data().parts && x.data().parts.map(part => part.id)\r\n        }));\r\n        return docs;\r\n    });\r\n}\r\n\r\nexport const getInventory = () => {\r\n    return firebase.firestore().collection(\"inventory\").get().then(response => {\r\n        let docs = response.docs.map(x => ({\r\n            id: x.id,\r\n            data: x.data(),\r\n            placeId: x.data().place.id\r\n        }));\r\n        return docs;\r\n    });\r\n}\r\nexport const updateInventory = (inventoryIteId, count) => {\r\n    return firebase.firestore().collection(\"inventory\").doc(inventoryIteId).update({\r\n        count: count\r\n    }).then(() => {\r\n        console.info(\"Done\");\r\n    });\r\n}\r\n\r\nexport const deleteInventory = (inventoryId) => {\r\n    return firebase.firestore().collection(\"inventory\").doc(inventoryId).delete().then(() => {\r\n        console.info(\"Done\");\r\n    });\r\n}\r\n\r\nexport const addInventory = (name, count, placeId) => {\r\n    return firebase.firestore().collection(\"inventory\").doc().set({\r\n        name: name,\r\n        count: count,\r\n        place: firebase.firestore().collection(\"places\").doc(placeId) // main-101 – id места\r\n    }).then(() => {\r\n        console.info(\"Done\");\r\n    });\r\n}\r\n\r\n","import {addInventory, deleteInventory, getInventory, getPlaces, initializeApp, updateInventory} from \"../api/api\";\r\n\r\nconst SET_DATA = 'SET-DATA'\r\nconst SET_PLACES_HIERARCHY = 'SET_PLACES_HIERARCHY'\r\nconst SET_VIEWING_PLACE = 'SET-VIEWING-PLACE'\r\n\r\n\r\nconst initialState = {\r\n    places: [],\r\n    inventory: [],\r\n    placesData: [],\r\n    viewingPlaceId: undefined,\r\n    viewingPlaceName: undefined,\r\n    inventoryPlaces: []\r\n}\r\n\r\nlet reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA: {\r\n            let copyState = {\r\n                ...state,\r\n                places: [...action.places],\r\n                inventory: [...action.inventory]\r\n            }\r\n            return copyState\r\n        }\r\n        case SET_PLACES_HIERARCHY: {\r\n            let copyState = {\r\n                ...state,\r\n                placesData: action.placesData,\r\n                inventoryPlaces: action.inventoryPlaces\r\n            }\r\n            return copyState\r\n        }\r\n        case SET_VIEWING_PLACE: {\r\n            let copyState = {\r\n                ...state,\r\n                viewingPlaceId: action.placeId,\r\n                viewingPlaceName: action.placeName\r\n            }\r\n            return copyState\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nexport const setData = (places, inventory) => {\r\n    return {\r\n        type: SET_DATA,\r\n        places,\r\n        inventory\r\n    }\r\n}\r\nexport const setViewingPlace = (placeId, placeName) => {\r\n    return {\r\n        type: SET_VIEWING_PLACE,\r\n        placeId,\r\n        placeName\r\n    }\r\n}\r\nexport const setPlacesHierarchy = (placesData, inventoryPlaces) => {\r\n    return {\r\n        type: SET_PLACES_HIERARCHY,\r\n        placesData,\r\n        inventoryPlaces,\r\n    }\r\n}\r\n\r\nexport const getDataThunkCreator = () => {\r\n    return async (dispatch) => {\r\n        initializeApp()\r\n        let places = await getPlaces()\r\n        let inventory = await getInventory()\r\n        dispatch(setData(places, inventory))\r\n    }\r\n}\r\nexport const addInventoryThunkCreator = (name, count, placeId) => {\r\n    return async (dispatch) => {\r\n        await addInventory(name, count, placeId)\r\n    }\r\n}\r\nexport const deleteInventoryThunkCreator = (inventoryId) => {\r\n    return async (dispatch) => {\r\n        await deleteInventory(inventoryId)\r\n    }\r\n}\r\nexport const editInventoryThunkCreator = (inventoryId, count) => {\r\n    return async (dispatch) => {\r\n        await updateInventory(inventoryId, count)\r\n    }\r\n}\r\n\r\nexport default reducer","import React from \"react\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport styles from './InventoryList.module.css'\r\n\r\nconst InventoryList = (props) => {\r\n    let inventoryItems\r\n\r\n    if (props.viewingPlaceId) {\r\n        let inventory = props.getChoosingInventoryItem(props.viewingPlaceId)\r\n\r\n        inventoryItems = inventory.map(el => {\r\n            if (!el) return undefined\r\n            else {\r\n                return <div className={styles.inventoryInfoCol}>\r\n                    <span className={styles.inventoryName}>Название: {el.data.name}</span>\r\n                    <span className={styles.inventoryCount}>Количество: {el.data.count}</span>\r\n                </div>\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Col className={styles.inventoryCol} xs={7}>\r\n            <div className={styles.inventoryInfoCol}>\r\n                <span className={styles.inventoryPlace}>{props.viewingPlaceName ? props.viewingPlaceName : null}</span>\r\n                <div>\r\n                    {props.viewingPlaceName && inventoryItems && inventoryItems.length > 0\r\n                        ? inventoryItems\r\n                        : props.viewingPlaceName\r\n                            ? <span>Кажется, тут нет инвентаря</span>\r\n                            : <span>Кажется, тут нет инвентаря</span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default InventoryList","import React from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './PlaceList.module.css'\r\nimport {Button} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst PlaceList = (props) => {\r\n\r\n    return (\r\n        <Col xs={3} className={styles.navCol}>\r\n            <Row className={styles.buildingsRow}>\r\n                <Col>\r\n                    {props.getBuildingsHtml()}\r\n                </Col>\r\n            </Row>\r\n            <Row className={styles.buttonsRow}>\r\n                <Col className={styles.buttonsCol} xs={12}>\r\n                    <Row>\r\n                        <Col xs={12} className={styles.inventoryButton}>\r\n                            <NavLink to='/add' className={styles.nav_item} activeClassName={styles.nav_item_active}><Button\r\n                                className={styles.nav_item_button} size='large' variant=\"contained\" color=\"primary\"\r\n                                startIcon={<AddIcon/>}>Добавить инвентарь</Button></NavLink>\r\n                        </Col>\r\n                        <Col xs={12} className={styles.inventoryButton}>\r\n                            <NavLink to='/edit' className={styles.nav_item} activeClassName={styles.nav_item_active}><Button\r\n                                className={styles.nav_item_button} size='large' variant=\"contained\" color=\"default\"\r\n                                startIcon={<EditIcon/>}>Обновить инвентарь</Button></NavLink>\r\n                        </Col>\r\n                        <Col xs={12} className={styles.inventoryButton}>\r\n                            <NavLink to='/delete' className={styles.nav_item} activeClassName={styles.nav_item_active}><Button\r\n                                className={styles.nav_item_button} size='large' variant=\"contained\" color=\"secondary\"\r\n                                startIcon={<DeleteIcon/>}>Удалить инвентарь</Button></NavLink>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default PlaceList","import React, {useState} from \"react\";\r\nimport styles from './PlaceItem.module.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nlet PlacesItem = (props) => {\r\n    let [isClicked, setIsClicked] = useState(false)\r\n    let placeOnClick = (e) => {\r\n        setIsClicked(true)\r\n\r\n    }\r\n\r\n    let getInventoryList = () => {\r\n        props.setViewingPlace(props.id, props.placeName)\r\n        placeOnClick()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.main} onClick={event => placeOnClick(event)}>\r\n\r\n            {props.childPlaces\r\n                ? <div className={isClicked ? styles.clickedPlace : styles.main}><span\r\n                    onClick={event => getInventoryList()}><Link\r\n                    to={'/inventory'}>{props.placeName}</Link></span>{props.childPlaces}</div>\r\n                : <span onClick={event => getInventoryList()}><Link to={'/inventory'}>{props.placeName}</Link></span>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlacesItem","export const requiredField = value => {\r\n    if(value) return undefined\r\n    return 'Поле пустое'\r\n}\r\n\r\nexport const  maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Вы ввели более ${maxLength} символов`\r\n    return undefined\r\n}\r\nexport const isNumber = value => {\r\n    if(isNaN(Number(value))) return 'Введите число'\r\n    return undefined\r\n}","import React from \"react\";\r\nimport {FormControlLabel, Radio} from \"@material-ui/core\";\r\n\r\nconst EditInventoryItem = (props) => {\r\n    return <FormControlLabel value={props.id} control={<Radio color={'default'}/>} label={props.name} checked={props.isChecked}/>\r\n}\r\n\r\nexport default EditInventoryItem","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    return (\r\n        <div className={styles.formControl + ' ' + styles.error}>\r\n            <div>\r\n                <TextField variant=\"outlined\" label=\"Заполните поле\" {...input} {...props}/>\r\n            </div>\r\n            {meta.touched && meta.error && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import {maxLengthCreator, requiredField, isNumber} from \"../../../validators/validators\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Button, RadioGroup} from \"@material-ui/core\";\r\nimport EditInventoryItem from \"./EditInventoryItem\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport styles from './EditInventory.module.css'\r\n\r\nconst maxlength5 = maxLengthCreator(5)\r\n\r\nconst TextareaForm = (props) => {\r\n    function onChange(e) {\r\n        props.setNewPlaceId(e.target.value)\r\n    }\r\n\r\n    let inventory = props.inventoryItems.map(el => {\r\n        return <EditInventoryItem name={el[0]} id={el[1]} isChecked={props.newPlaceId == el[1]}/>\r\n    })\r\n    const RadioButtonGroup = (props) => {\r\n        return <RadioGroup {...props} onChange={onChange}>{inventory}</RadioGroup>\r\n    }\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='buttons' component={RadioButtonGroup}/>\r\n            </div>\r\n            <Field component={Textarea} placeholder='введите число элементов' type='number' name='editInventoryCount'\r\n                   validate={[requiredField, isNumber, maxlength5]}/>\r\n            <Button className={styles.updateButton} type=\"submit\" variant=\"contained\" color=\"default\">Обновить</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport let EditInventoryForm = reduxForm({form: \"editInventoryForm\"})(TextareaForm)","import React, {useState} from \"react\";\r\nimport {EditInventoryForm} from \"./EditInventoryForm\";\r\nimport styles from './EditInventory.module.css'\r\n\r\n\r\nconst EditInventory = (props) => {\r\n\r\n    let [newPlaceId, setNewPlaceId] = useState(undefined)\r\n    let places = props.getUpdateInventoryList()\r\n\r\n    let inventoryItems = []\r\n\r\n    places.map(inventoryItem =>{\r\n        inventoryItem.inventory.forEach(el =>{\r\n            inventoryItems.push([el.data.name, el.id])\r\n        })\r\n    })\r\n\r\n    let editInventory = async (value) =>{\r\n        if(value.editInventoryCount && newPlaceId){\r\n            await props.editInventory(newPlaceId,value.editInventoryCount)\r\n            props.rerenderComponent()\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.editInventoryCol}>\r\n            <div className={styles.title}>Обновление инвентаря</div>\r\n            <div className={styles.chooseTitle}>Выберете инвентарь</div>\r\n            <div>\r\n                <EditInventoryForm onSubmit={editInventory} inventoryItems={inventoryItems} setNewPlaceId={setNewPlaceId} newPlaceId={newPlaceId}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditInventory","import {FormControlLabel, Radio} from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\n\r\n\r\nconst ChangeInventoryItem = (props) => {\r\n\r\n    return (\r\n        <FormControlLabel value={props.id} control={<Radio color={props.color}/>} label={props.name}\r\n                          checked={props.isChecked}/>\r\n    )\r\n}\r\n\r\nexport default ChangeInventoryItem","import React, {useState} from \"react\";\r\nimport ChangeInventoryItem from \"../ChangeInventoryItem\";\r\nimport {Button, RadioGroup} from \"@material-ui/core\";\r\nimport styles from './DeleteInventory.module.css'\r\n\r\nconst DeleteInventory = (props) => {\r\n    let [newPlaceId, setNewPlaceId] = useState(undefined)\r\n    let places = props.getUpdateInventoryList()\r\n\r\n    let inventoryItems = []\r\n\r\n    places.map(inventoryItem => {\r\n        inventoryItem.inventory.forEach(el => {\r\n            inventoryItems.push([el.data.name, el.id])\r\n        })\r\n    })\r\n\r\n    let onChange = (e) => {\r\n        setNewPlaceId(e.target.value)\r\n    }\r\n\r\n    let getInventory = inventoryItems.map(el => {\r\n        return <ChangeInventoryItem name={el[0]} id={el[1]} setNewPlaceId={setNewPlaceId} color='secondary'/>\r\n    })\r\n\r\n    let deleteInventory = async () => {\r\n        if (newPlaceId) {\r\n            await props.deleteInventory(newPlaceId)\r\n            props.rerenderComponent()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.deleteInventoryCol}>\r\n            <div className={styles.title}>Удаление инвентаря</div>\r\n\r\n            <div className={styles.chooseTitle}>Выберете элемент</div>\r\n            <div>\r\n                <RadioGroup onChange={onChange}>{getInventory}</RadioGroup>\r\n            </div>\r\n            <div>\r\n                <Button onClick={event => deleteInventory()} type=\"submit\" size='large' variant=\"contained\"\r\n                        color=\"secondary\">Удалить</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteInventory","import {maxLengthCreator, requiredField, isNumber} from \"../../../validators/validators\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {Button, RadioGroup, Select} from '@material-ui/core';\r\nimport ChangeInventoryItem from \"../ChangeInventoryItem\";\r\nimport styles from './AddInventory.module.css'\r\n\r\n\r\nconst maxlength20 = maxLengthCreator(20)\r\nconst maxlength5 = maxLengthCreator(5)\r\n\r\n\r\nconst TextareaForm = (props) => {\r\n\r\n    let onChange = (e) => {\r\n        return props.setNewPlaceId(e.target.value)\r\n    }\r\n    let places = props.places.map((el, i) => {\r\n        return <ChangeInventoryItem key={i} name={el.data.name} id={el.id} isChecked={el.id == props.newPlaceId}\r\n                                    color='primary'/>\r\n    })\r\n\r\n    const RadioButtonGroup = (props) => {\r\n        return <RadioGroup {...props} onChange={onChange}>{places}</RadioGroup>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='buttons' component={RadioButtonGroup}/>\r\n            </div>\r\n            <div className={styles.textField}>\r\n                <Field component={Textarea} placeholder='введите название элемента' type='text' name='addInventoryName'\r\n                       validate={[requiredField, maxlength20]}/>\r\n            </div>\r\n            <div className={styles.textField}>\r\n                <Field component={Textarea} placeholder='введите число элементов' type='number' name='addInventoryCount'\r\n                       validate={[requiredField, isNumber, maxlength5]}/>\r\n            </div>\r\n            <Button type=\"submit\" size='large' variant=\"contained\" color=\"primary\">Добавить</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport let AddInventoryForm = reduxForm({form: \"addInventoryForm\"})(TextareaForm)","import React, {useState} from \"react\";\r\nimport {AddInventoryForm} from \"./AddInventoryForm\";\r\nimport styles from './AddInventory.module.css'\r\n\r\nconst AddInventory = (props) => {\r\n\r\n    let [newPlaceId, setNewPlaceId] = useState(undefined)\r\n\r\n    let placesArr = props.getAddInventoryList()\r\n\r\n    let addNewInventoryName = (value) => {\r\n        console.log(value)\r\n        addInventory(value.addInventoryName, value.addInventoryCount, newPlaceId)\r\n    }\r\n    let addInventory = async (InventoryName, InventoryCount, newPlaceId) => {\r\n        if (newPlaceId && InventoryName && InventoryCount) {\r\n            await props.addNewInventory(InventoryName, InventoryCount, newPlaceId)\r\n            props.rerenderComponent()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.addInventoryCol}>\r\n            <div className={styles.title}>ДОБАВЛЕНИЕ ИНВЕНТАРЯ</div>\r\n            <div className={styles.chooseTitle}>Пожалуйста, выберете место</div>\r\n\r\n            <div>\r\n                <AddInventoryForm onSubmit={addNewInventoryName} places={placesArr} setNewPlaceId={setNewPlaceId}\r\n                                  newPlaceId={newPlaceId}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInventory","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    addInventoryThunkCreator,\r\n    deleteInventoryThunkCreator, editInventoryThunkCreator,\r\n    getDataThunkCreator,\r\n    setPlacesHierarchy,\r\n    setViewingPlace\r\n} from \"../../redux/reducer\";\r\nimport InventoryList from \"./InventoryList/InventoryList\";\r\nimport PlaceList from \"./PlacesList/PlacesList\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport styles from \"./PlacesList/PlaceList.module.css\"\r\nimport PlacesItem from \"./PlacesList/PlacesItem\";\r\nimport {BrowserRouter, Switch} from \"react-router-dom\";\r\nimport Route from \"react-router-dom/es/Route\";\r\nimport EditInventory from \"../ChangeInventory/EditInventory/EditInventory\";\r\nimport DeleteInventory from \"../ChangeInventory/DeleteInventory/DeleteInventory\";\r\nimport AddInventory from \"../ChangeInventory/AddInvenory/AddInventory\";\r\n\r\n\r\nclass ListContainer extends React.Component {\r\n\r\n    componentDidMount = async () => {\r\n        await this.props.getDataThunkCreator()\r\n        let places = this.setInventoryOnPlaces([...this.props.inventory], [...this.props.places])\r\n        this.props.setPlacesHierarchy(this.getBuildingsData(places), places)\r\n    }\r\n\r\n    rerenderComponent = async () => {\r\n        await this.props.getDataThunkCreator()\r\n        let places = this.setInventoryOnPlaces([...this.props.inventory], [...this.props.places])\r\n        console.log(places)\r\n        this.props.setPlacesHierarchy(this.getBuildingsData(places), places)\r\n        this.setState({ms: \"Rerender\"});\r\n    }\r\n\r\n    getAddInventoryList = () => {\r\n        return this.props.places.filter(el => !el.parts)\r\n    }\r\n\r\n    getUpdateInventoryList = () => {\r\n        return this.props.places.filter(el => !el.parts && el.inventory && el.inventory.length > 0)\r\n    }\r\n\r\n    setInventoryOnPlaces = (inventory, places) => {\r\n        inventory.forEach(inventoryItem => {\r\n            places.forEach(placeItem => {\r\n                if (!placeItem.inventory) {\r\n                    placeItem.inventory = []\r\n                }\r\n                if (inventoryItem.placeId == placeItem.id) {\r\n                    placeItem.inventory.push(inventoryItem)\r\n                }\r\n            })\r\n        })\r\n        return places\r\n    }\r\n\r\n\r\n    getPlacesHierarchy = (el, places, rooms) => {\r\n        if (el.parts && !rooms.includes(el.id)) {\r\n\r\n            let parts = el.parts.map(element => {\r\n                let index = places.findIndex(k => k.id == element)\r\n                rooms.push(el.id)\r\n\r\n                if (places[index].parts) {\r\n                    return this.getPlacesHierarchy(places[index], places, rooms)\r\n                }\r\n                if (places[index]) {\r\n                    return places[index]\r\n                }\r\n            })\r\n            let inventory = el.parts.map(element => {\r\n                let index = places.findIndex(k => k.id == element)\r\n                rooms.push(el.id)\r\n\r\n                if (places[index].inventory) {\r\n                    return places[index].inventory\r\n                }\r\n                if (places[index].parts) {\r\n                    return this.getPlacesHierarchy(places[index], places, rooms)\r\n                }\r\n            })\r\n            return {\r\n                ...el,\r\n                places: parts,\r\n                inventory: inventory.filter(el => el.length > 0)\r\n            }\r\n        }\r\n        rooms.push(el.id)\r\n    }\r\n\r\n    getBuildingsData = (places) => {\r\n        let rooms = []\r\n        let buildings = places.map((el) => {\r\n            let Buildings = this.getPlacesHierarchy(el, [...places], rooms)\r\n            return Buildings\r\n        })\r\n        let newData = buildings.filter(el => el)\r\n        newData[0].inventory = newData[0].places[0].inventory.concat(newData[0].places[1].inventory)\r\n        return newData\r\n    }\r\n\r\n    getPlacesHtml = (el) => {\r\n        if (el.places) {\r\n            let PlacesHtml = el.places.map((element, i, array) => {\r\n                if (element.places) {\r\n                    return this.getPlacesHtml(element)\r\n                }\r\n                return <PlacesItem setViewingPlace={this.props.setViewingPlace} id={element.id}\r\n                                   placeName={element.data.name} viewingPlaceId={this.props.viewingPlaceId}/>\r\n            })\r\n            return <PlacesItem setViewingPlace={this.props.setViewingPlace} id={el.id} childPlaces={PlacesHtml}\r\n                               placeName={el.data.name} viewingPlaceId={this.props.viewingPlaceId}/>\r\n        }\r\n    }\r\n\r\n    getBuildingsHtml = () => {\r\n        let BuildingsHtml = this.props.state.placesData.map(el => {\r\n            return this.getPlacesHtml(el)\r\n        })\r\n        return BuildingsHtml\r\n    }\r\n\r\n    getPlaceInventory = (item, desiredItemId) => {\r\n\r\n        if (item.id == desiredItemId) {\r\n            return item.inventory\r\n        } else if (item.places) {\r\n            let inventory = item.places.find(el => {\r\n                return el.id == desiredItemId\r\n            })\r\n            if (inventory) {\r\n                inventory = inventory.inventory\r\n            }\r\n            if (!inventory) {\r\n                let a = item.places.map(el => {\r\n                    inventory = this.getPlaceInventory(el, desiredItemId)\r\n                    return inventory\r\n                }).filter(el => el)\r\n                return a\r\n            }\r\n            return inventory\r\n        }\r\n    }\r\n\r\n    getChoosingInventoryItem = (viewingPlaceId) => {\r\n        let desiredPlace = this.props.state.placesData.map(el => {\r\n            return this.getPlaceInventory(el, viewingPlaceId).filter(element => element && element.length == undefined || element && element.length > 0)\r\n        }).filter(el => el.length == undefined || el.length > 0)\r\n\r\n        let place = desiredPlace.map(el => {\r\n            if (el.length) {\r\n                let unitedPlaces = []\r\n\r\n                el.forEach(element => {\r\n                    unitedPlaces = unitedPlaces.concat(element)\r\n                })\r\n\r\n                let element = unitedPlaces.filter(el => el)\r\n                return element\r\n            }\r\n        })\r\n        place = [].concat(place[0])\r\n        return place\r\n    }\r\n\r\n    render = () => (\r\n        <BrowserRouter>\r\n            <Switch></Switch>\r\n            <Row className={styles.placesRow}>\r\n                <PlaceList getBuildingsHtml={this.getBuildingsHtml} places={this.props.state.placesData}/>\r\n                <Route path='/inventory' render={() => <InventoryList rerenderComponent={this.rerenderComponent}\r\n                                                                      getChoosingInventoryItem={this.getChoosingInventoryItem}\r\n                                                                      viewingPlaceId={this.props.viewingPlaceId}\r\n                                                                      viewingPlaceName={this.props.viewingPlaceName}/>}/>\r\n                <Route path='/edit' render={() => <EditInventory rerenderComponent={this.rerenderComponent}\r\n                                                                 getUpdateInventoryList={this.getUpdateInventoryList}\r\n                                                                 editInventory={this.props.editInventoryThunkCreator}/>}/>\r\n                <Route path='/delete'\r\n                       render={() => <DeleteInventory deleteInventory={this.props.deleteInventoryThunkCreator}\r\n                                                      rerenderComponent={this.rerenderComponent}\r\n                                                      getUpdateInventoryList={this.getUpdateInventoryList}/>}/>\r\n                <Route path='/add' render={() => <AddInventory addNewInventory={this.props.addInventoryThunkCreator}\r\n                                                               rerenderComponent={this.rerenderComponent}\r\n                                                               getAddInventoryList={this.getAddInventoryList}/>}/>\r\n            </Row>\r\n            <Row>\r\n\r\n            </Row>\r\n        </BrowserRouter>\r\n\r\n\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.page,\r\n        inventory: state.page.inventory,\r\n        places: state.page.places,\r\n        viewingPlaceId: state.page.viewingPlaceId,\r\n        viewingPlaceName: state.page.viewingPlaceName\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getDataThunkCreator,\r\n    setPlacesHierarchy,\r\n    setViewingPlace,\r\n    addInventoryThunkCreator,\r\n    deleteInventoryThunkCreator,\r\n    editInventoryThunkCreator\r\n}))(ListContainer);","import logo from './logo.svg';\nimport './App.css';\nimport firebase from \"firebase\";\nimport ListContainer from \"./components/ItemsList/ListContainer\";\nimport {Col, Container} from \"react-bootstrap\";\n\nfunction App() {\n    return (\n        <Container fluid className=\"App\">\n            <ListContainer/>\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";import thunk from \"redux-thunk\";\r\nimport reducer from \"./reducer\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    page: reducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)\r\n));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store}/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AddInventory_title__1e3iJ\",\"addInventoryCol\":\"AddInventory_addInventoryCol__dAwrM\",\"chooseTitle\":\"AddInventory_chooseTitle__1ORtj\",\"textField\":\"AddInventory_textField__-F3aL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inventoryPlace\":\"InventoryList_inventoryPlace__2jo4D\",\"inventoryName\":\"InventoryList_inventoryName__wA5M_\",\"inventoryCount\":\"InventoryList_inventoryCount__1sDgg\",\"inventoryInfoCol\":\"InventoryList_inventoryInfoCol__27ARj\",\"inventoryCol\":\"InventoryList_inventoryCol__1oTKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"EditInventory_title__1RUWH\",\"editInventoryCol\":\"EditInventory_editInventoryCol__3fCtJ\",\"chooseTitle\":\"EditInventory_chooseTitle__2vBwW\",\"textField\":\"EditInventory_textField__pqz8i\",\"updateButton\":\"EditInventory_updateButton___4EHp\"};"],"sourceRoot":""}